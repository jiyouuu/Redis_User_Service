server{
    listen 80;

    location / {
        root /usr/share/nginx/html;

        index index.html;

        try_files $uri $uri/ /index.html;
    }


    location /static/ {
        alias /usr/share/nginx/html/static/;
    }

    location /static/profiles/ {
        alias /usr/share/nginx/html/static/profiles/;
        autoindex on;  # 필요시 폴더 목록 보이게
    }

    location /api/ {  # 클라이언트(브라우저 등)에서 http://내서버/api/ 로 시작하는 요청이 들어오면
        proxy_pass http://api_gateway:8001;  # /api/ 로 들어온 요청을 api_gateway라는 다른 서버(컨테이너)의 8080번 포트로 넘긴다
                                            # 즉, Nginx가 프록시 역할을 해서 /api/ 관련 요청은 뒤에 있는 api_gateway 서버가 처리하도록 위임하는 것
        # 아래는 프록시(중계)할 때, 클라이언트가 보낸 원래 요청 정보를 뒤에 있는 서버에게도 전달하기 위한 설정
        proxy_set_header Host $host; # 원래 요청된 호스트 이름(도메인) 을 넘김
        proxy_set_header X-Real-IP $remote_addr;   # 실제 요청한 클라이언트의 IP 주소를 넘김
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;   #  클라이언트 IP와 프록시 서버 IP 등 중간에 거친 IP 주소 목록을 넘김
        proxy_set_header X-Forwarded-Proto $scheme;  # 요청이 http인지 https인지 (프로토콜 종류)를 넘김
        # 중복 헤더 제거
        proxy_hide_header Date;
        proxy_hide_header Server;
    }
}

# api_gateway 서버는 직접 인터넷에서 오는 게 아니라 Nginx가 대신 요청을 넘겨주기 때문에,
# api_gateway가 "누가 요청했는지", "어떤 호스트로 요청했는지" 알 수 있도록 이 헤더들을 넘겨줘야 해.

# 정리
# /api/ 요청은 Nginx가 받아서 내부의 api_gateway:8000으로 넘긴다   # 컨테이너 간 통신은 api_gateway:8000
# 요청한 클라이언트의 IP나 프로토콜 같은 정보도 같이 넘겨줘서 정확한 처리가 가능하게 한다